struct Node {
    int val;
    Node next;
}

struct BigInt {
    Node head;
    Node tail;
}

BigInt BigInt_create(int num) {
    Node first = new Node(val = num);
    BigInt big_int = new BigInt(head = first, tail = first);

    return big_int;
}

bool is_sum_overflow(int a, int b, int c) {
    int sum = a + b + c;
    if (a >= 0 && b >= 0 && c >= 0 && sum < 0) return true;
    if (a <= 0 && b <= 0 && c <= 0 && sum > 0) return true;
    return false;
}



void BigInt_print(BigInt i) {
    Node curr = i.head;
    while (curr != null) {
        print "[", curr.val, "]";
        curr = curr.next;
    }
}

BigInt a = BigInt_create(5);
BigInt_print(a);

